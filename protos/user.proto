syntax = "proto3";

package user;

// User service for managing users
service UserService {
  // Gets a user by ID
  rpc GetUser (GetUserRequest) returns (User) {}
  
  // Creates a new user
  rpc CreateUser (CreateUserRequest) returns (User) {}
  
  // Updates an existing user
  rpc UpdateUser (UpdateUserRequest) returns (User) {}
  
  // Deletes a user
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse) {}
  
  // Streams updates about users
  rpc WatchUsers (WatchUsersRequest) returns (stream User) {}
}

// Request message for getting a user
message GetUserRequest {
  string id = 1;
}

// Request message for creating a user
message CreateUserRequest {
  string name = 1;
  string email = 2;
  UserRole role = 3;
}

// Request message for updating a user
message UpdateUserRequest {
  string id = 1;
  string name = 2;
  string email = 3;
  UserRole role = 4;
}

// Request message for deleting a user
message DeleteUserRequest {
  string id = 1;
}

// Response message for deleting a user
message DeleteUserResponse {
  bool success = 1;
  string message = 2;
}

// Request message for watching users
message WatchUsersRequest {
  optional string roleFilter = 1;
}

// User message representing a user entity
message User {
  string id = 1;
  string name = 2;
  string email = 3;
  UserRole role = 4;
  string created_at = 5;
  string updated_at = 6;
}

// Enum representing user roles
enum UserRole {
  USER = 0;
  ADMIN = 1;
  MODERATOR = 2;
}